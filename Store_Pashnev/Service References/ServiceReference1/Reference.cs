//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Store_Pashnev.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IStoreService", CallbackContract=typeof(Store_Pashnev.ServiceReference1.IStoreServiceCallback))]
    public interface IStoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetUserId", ReplyAction="http://tempuri.org/IStoreService/GetUserIdResponse")]
        int GetUserId(string nick, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetUserId", ReplyAction="http://tempuri.org/IStoreService/GetUserIdResponse")]
        System.Threading.Tasks.Task<int> GetUserIdAsync(string nick, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetDatabaseAccess", ReplyAction="http://tempuri.org/IStoreService/GetDatabaseAccessResponse")]
        Store_WSL.DataBase GetDatabaseAccess(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetDatabaseAccess", ReplyAction="http://tempuri.org/IStoreService/GetDatabaseAccessResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> GetDatabaseAccessAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCurIdentity", ReplyAction="http://tempuri.org/IStoreService/GetCurIdentityResponse")]
        int GetCurIdentity(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCurIdentity", ReplyAction="http://tempuri.org/IStoreService/GetCurIdentityResponse")]
        System.Threading.Tasks.Task<int> GetCurIdentityAsync(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetPosition", ReplyAction="http://tempuri.org/IStoreService/SetPositionResponse")]
        Store_WSL.DataBase SetPosition(Store_WSL.Position position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetPosition", ReplyAction="http://tempuri.org/IStoreService/SetPositionResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> SetPositionAsync(Store_WSL.Position position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetProduct", ReplyAction="http://tempuri.org/IStoreService/SetProductResponse")]
        Store_WSL.DataBase SetProduct(Store_WSL.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetProduct", ReplyAction="http://tempuri.org/IStoreService/SetProductResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> SetProductAsync(Store_WSL.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DelProduct", ReplyAction="http://tempuri.org/IStoreService/DelProductResponse")]
        Store_WSL.DataBase DelProduct(Store_WSL.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DelProduct", ReplyAction="http://tempuri.org/IStoreService/DelProductResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> DelProductAsync(Store_WSL.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetDepartment", ReplyAction="http://tempuri.org/IStoreService/SetDepartmentResponse")]
        Store_WSL.DataBase SetDepartment(Store_WSL.Department department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetDepartment", ReplyAction="http://tempuri.org/IStoreService/SetDepartmentResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> SetDepartmentAsync(Store_WSL.Department department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetEmployee", ReplyAction="http://tempuri.org/IStoreService/SetEmployeeResponse")]
        Store_WSL.DataBase SetEmployee(Store_WSL.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetEmployee", ReplyAction="http://tempuri.org/IStoreService/SetEmployeeResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> SetEmployeeAsync(Store_WSL.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetUser", ReplyAction="http://tempuri.org/IStoreService/SetUserResponse")]
        Store_WSL.DataBase SetUser(Store_WSL.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetUser", ReplyAction="http://tempuri.org/IStoreService/SetUserResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> SetUserAsync(Store_WSL.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetClient", ReplyAction="http://tempuri.org/IStoreService/SetClientResponse")]
        Store_WSL.DataBase SetClient(Store_WSL.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetClient", ReplyAction="http://tempuri.org/IStoreService/SetClientResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> SetClientAsync(Store_WSL.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetOrder", ReplyAction="http://tempuri.org/IStoreService/SetOrderResponse")]
        Store_WSL.DataBase SetOrder(Store_WSL.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/SetOrder", ReplyAction="http://tempuri.org/IStoreService/SetOrderResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> SetOrderAsync(Store_WSL.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/RemoveOrder", ReplyAction="http://tempuri.org/IStoreService/RemoveOrderResponse")]
        Store_WSL.DataBase RemoveOrder(Store_WSL.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/RemoveOrder", ReplyAction="http://tempuri.org/IStoreService/RemoveOrderResponse")]
        System.Threading.Tasks.Task<Store_WSL.DataBase> RemoveOrderAsync(Store_WSL.Order order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStoreServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStoreService/DbRenew")]
        void DbRenew();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStoreServiceChannel : Store_Pashnev.ServiceReference1.IStoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StoreServiceClient : System.ServiceModel.DuplexClientBase<Store_Pashnev.ServiceReference1.IStoreService>, Store_Pashnev.ServiceReference1.IStoreService {
        
        public StoreServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public StoreServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public StoreServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int GetUserId(string nick, string password) {
            return base.Channel.GetUserId(nick, password);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdAsync(string nick, string password) {
            return base.Channel.GetUserIdAsync(nick, password);
        }
        
        public Store_WSL.DataBase GetDatabaseAccess(int userId) {
            return base.Channel.GetDatabaseAccess(userId);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> GetDatabaseAccessAsync(int userId) {
            return base.Channel.GetDatabaseAccessAsync(userId);
        }
        
        public int GetCurIdentity(string tableName) {
            return base.Channel.GetCurIdentity(tableName);
        }
        
        public System.Threading.Tasks.Task<int> GetCurIdentityAsync(string tableName) {
            return base.Channel.GetCurIdentityAsync(tableName);
        }
        
        public Store_WSL.DataBase SetPosition(Store_WSL.Position position) {
            return base.Channel.SetPosition(position);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> SetPositionAsync(Store_WSL.Position position) {
            return base.Channel.SetPositionAsync(position);
        }
        
        public Store_WSL.DataBase SetProduct(Store_WSL.Product product) {
            return base.Channel.SetProduct(product);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> SetProductAsync(Store_WSL.Product product) {
            return base.Channel.SetProductAsync(product);
        }
        
        public Store_WSL.DataBase DelProduct(Store_WSL.Product product) {
            return base.Channel.DelProduct(product);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> DelProductAsync(Store_WSL.Product product) {
            return base.Channel.DelProductAsync(product);
        }
        
        public Store_WSL.DataBase SetDepartment(Store_WSL.Department department) {
            return base.Channel.SetDepartment(department);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> SetDepartmentAsync(Store_WSL.Department department) {
            return base.Channel.SetDepartmentAsync(department);
        }
        
        public Store_WSL.DataBase SetEmployee(Store_WSL.Employee employee) {
            return base.Channel.SetEmployee(employee);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> SetEmployeeAsync(Store_WSL.Employee employee) {
            return base.Channel.SetEmployeeAsync(employee);
        }
        
        public Store_WSL.DataBase SetUser(Store_WSL.User user) {
            return base.Channel.SetUser(user);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> SetUserAsync(Store_WSL.User user) {
            return base.Channel.SetUserAsync(user);
        }
        
        public Store_WSL.DataBase SetClient(Store_WSL.Client client) {
            return base.Channel.SetClient(client);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> SetClientAsync(Store_WSL.Client client) {
            return base.Channel.SetClientAsync(client);
        }
        
        public Store_WSL.DataBase SetOrder(Store_WSL.Order order) {
            return base.Channel.SetOrder(order);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> SetOrderAsync(Store_WSL.Order order) {
            return base.Channel.SetOrderAsync(order);
        }
        
        public Store_WSL.DataBase RemoveOrder(Store_WSL.Order order) {
            return base.Channel.RemoveOrder(order);
        }
        
        public System.Threading.Tasks.Task<Store_WSL.DataBase> RemoveOrderAsync(Store_WSL.Order order) {
            return base.Channel.RemoveOrderAsync(order);
        }
    }
}
